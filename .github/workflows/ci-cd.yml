name: Library CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Lint and Test Job
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm run test
        env:
          # Add any required environment variables for testing
          NODE_ENV: test

  # Publish to NPM Job
  publish:
    needs: lint-and-test
    runs-on: ubuntu-latest
    # Only publish from main branch
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: "https://registry.npmjs.org"

      - name: Install Dependencies
        run: npm ci

      - name: Check Package Version
        id: check_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view $(node -p "require('./package.json').name") version || echo "0.0.0")
          if [ "$CURRENT_VERSION" != "$NPM_VERSION" ]; then
            echo "publish=true" >> $GITHUB_OUTPUT
          else
            echo "publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.check_version.outputs.publish == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
